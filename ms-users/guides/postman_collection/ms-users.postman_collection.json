{
	"info": {
		"_postman_id": "ec5f38b8-8c1d-477a-96ea-3e221ac663df",
		"name": "ms-users",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "45489944"
	},
	"item": [
		{
			"name": "USER",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"pm.environment.set(\"jwt_token\", jsonData.tokenJWT);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"mickyj\",\n    \"password\": \"SenhaForte123!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/users/login"
					},
					"response": []
				},
				{
					"name": "POST users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"// Protege contra erro se user ou tokenJWT estiverem ausentes",
									"if (jsonData.tokenJWT) {",
									"    pm.environment.set(\"jwt_token\", jsonData.tokenJWT);",
									"}",
									"",
									"if (jsonData.user && jsonData.user.id) {",
									"    pm.environment.set(\"id\", jsonData.user.id);",
									"} else {",
									"    console.warn(\"Resposta não contém 'user.id'\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Micky Jagger\",\r\n  \"email\": \"micky.jagger@example.com\",\r\n  \"login\": \"mickyj\",\r\n  \"password\": \"SenhaForte123!\",\r\n  \"userType\": \"OWNER\",\r\n  \"address\": [\r\n    {\r\n      \"zipcode\": \"12345-678\",\r\n      \"street\": \"Rua das Flores\",\r\n      \"number\": 100,\r\n      \"complement\": \"Apartamento 101\",\r\n      \"neighborhood\": \"Centro\",\r\n      \"city\": \"Salvador\",\r\n      \"state\": \"BA\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/users"
					},
					"response": []
				},
				{
					"name": "GET user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": "{{base_url}}/users/{{id}}"
					},
					"response": []
				},
				{
					"name": "GET users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/users?page=1&size=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT users",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Lucas Pereira\",\n  \"email\": \"lucas.per234234eira@email.com\",\n  \"login\": \"luca234234sp\",\n  \"address\": [\n    {\n      \"zipcode\": \"98765-432\",\n      \"street\": \"Rua das Palmeiras\",\n      \"number\": 112,\n      \"complement\": \"Apto 402\",\n      \"neighborhood\": \"Boa Vista\",\n      \"city\": \"São Paulo\",\n      \"state\": \"SP\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/users/{{id}}"
					},
					"response": []
				},
				{
					"name": "ACTIVATE/DEACTIVATE users",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/{{id}}?activate=false",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"{{id}}"
							],
							"query": [
								{
									"key": "activate",
									"value": "false"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CHANGE PASSWORD",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"oldPassword\": \"SenhaForte123!\",\n    \"newPassword\": \"NovaSenhaForte123!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/users/{{id}}/password"
					},
					"response": []
				}
			]
		},
		{
			"name": "RESTAURANT",
			"item": [
				{
					"name": "POST restaurants",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"if (jsonData.id) {",
									"    pm.environment.set(\"restaurantId\", jsonData.id);",
									"} else {",
									"    console.warn(\"Resposta não contém 'id'\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Micky Jagger's Supreme Burger\",\r\n  \"address\": {\r\n    \"zipcode\": \"01516-001\",\r\n    \"street\": \"Rua do Rock Bebe\",\r\n    \"number\": 1000,\r\n    \"complement\": \"Loja 11\",\r\n    \"neighborhood\": \"Centro\",\r\n    \"city\": \"São Paulo\",\r\n    \"state\": \"SP\"\r\n  },\r\n  \"openingHours\": [\r\n    {\r\n      \"weekDay\": \"SEGUNDA\",\r\n      \"openingTime\": \"09:00\",\r\n      \"closingTime\": \"18:00\"\r\n    },\r\n    {\r\n      \"weekDay\": \"TERCA\",\r\n      \"openingTime\": \"09:00\",\r\n      \"closingTime\": \"18:00\"\r\n    }\r\n  ],\r\n  \"cuisineType\": \"FAST_FOOD\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/restaurants"
					},
					"response": []
				},
				{
					"name": "GET restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": "{{base_url}}/restaurants/{{restaurantId}}"
					},
					"response": []
				},
				{
					"name": "GET restaurants",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/restaurants?page=1&size=5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"restaurants"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT restaurant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Jagger's Supreme Burgers\",\r\n  \"address\": {\r\n    \"zipcode\": \"01516-001\",\r\n    \"street\": \"Rua do Rock Bebe\",\r\n    \"number\": 500,\r\n    \"complement\": \"Loja 1\",\r\n    \"neighborhood\": \"Centro\",\r\n    \"city\": \"São Paulo\",\r\n    \"state\": \"SP\"\r\n  },\r\n  \"openingHours\": [\r\n    {\r\n      \"weekDay\": \"SABADO\",\r\n      \"openingTime\": \"09:00\",\r\n      \"closingTime\": \"18:00\"\r\n    },\r\n    {\r\n      \"weekDay\": \"DOMINGO\",\r\n      \"openingTime\": \"09:00\",\r\n      \"closingTime\": \"18:00\"\r\n    }\r\n  ],\r\n  \"cuisineType\": \"FAST_FOOD\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/restaurants/{{restaurantId}}"
					},
					"response": []
				},
				{
					"name": "DELETE restaurant",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": "{{base_url}}/restaurants/{{restaurantId}}"
					},
					"response": []
				}
			]
		},
		{
			"name": "USER TYPE",
			"item": [
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"// Protege contra erro se user ou tokenJWT estiverem ausentes",
									"if (jsonData.id) {",
									"    pm.environment.set(\"userTypeId\", jsonData.id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"9999\",\n\t\"description\": \"9999\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/usertypes"
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"9999\",\n\t\"description\": \"9999\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/usertypes/{{userTypeId}}"
					},
					"response": []
				},
				{
					"name": "List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/usertypes?size=10&offset=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usertypes"
							],
							"query": [
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "By ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"url": "{{base_url}}/usertypes/{{userTypeId}}"
					},
					"response": []
				},
				{
					"name": "Activate/Deactivate",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/usertypes/{{userTypeId}}/activation?activate=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usertypes",
								"{{userTypeId}}",
								"activation"
							],
							"query": [
								{
									"key": "activate",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": {
					"token": "{{authToken}}"
				}
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Menu Items - CRUD",
			"item": [
				{
					"name": "Create Menu Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonData = pm.response.json();",
									"",
									"if (jsonData.id) {",
									"    pm.environment.set(\"menuItemId\", jsonData.id);",
									"} else {",
									"    console.warn(\"Resposta não contém 'id'\");",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Pizza Margherita\",\n  \"description\": \"Delicious classic pizza with tomato and cheese\",\n  \"price\": 29.90,\n  \"availableOnlyOnSite\": true,\n  \"imagePath\": \"pizza.jpg\",\n  \"restaurantId\": \"{{restaurantId}}\"\n}"
						},
						"url": "{{base_url}}/menu-items"
					},
					"response": []
				},
				{
					"name": "Get Menu Item by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{base_url}}/menu-items/{{menuItemId}}"
					},
					"response": []
				},
				{
					"name": "Get All Menu Items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{base_url}}/menu-items/all"
					},
					"response": []
				},
				{
					"name": "Get Paginated Menu Items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/menu-items?size=5&offset=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"menu-items"
							],
							"query": [
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Menu Item",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Pizza Margherita Updated\",\n  \"description\": \"Updated description with fresh basil and premium mozzarella\",\n  \"price\": 34.99,\n  \"availableOnlyOnSite\": false,\n  \"imagePath\": \"updated_pizza.png\"\n}"
						},
						"url": "{{base_url}}/menu-items/{{menuItemId}}"
					},
					"response": []
				},
				{
					"name": "Delete Menu Item",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"url": "{{base_url}}/menu-items/{{menuItemId}}"
					},
					"response": []
				}
			],
			"description": "Operações básicas de CRUD para itens do menu"
		},
		{
			"name": "Menu Items - Availability",
			"item": [
				{
					"name": "Change Availability",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "true"
						},
						"url": "{{base_url}}/menu-items/{{menuItemId}}/change-availability"
					},
					"response": []
				}
			],
			"description": "Operações relacionadas à disponibilidade para pedir os itens do cardápio apenas no restaurante"
		}
	]
}